#include <stdio.h>
#include <string.h>
#include <malloc.h>
#include <math.h>

struct arbol
{
	const char* dato;
	struct arbol * arbolIzquierdo;
	struct arbol * arbolDerecho;
};

typedef struct arbol * Arbol;

Arbol crearArbol(const char *,int,int);

int evaluarArbol(Arbol a);

void imprimirArbol(Arbol a);


#include "arbol.h"

void ignorarEspacios(const char * array , int *vv)
{
	int v=*vv;
	char t = array[v];
	
	while(t == ' ')
	{
		v++;
		t = array[v];
	}
	*vv = v;
}

int charAEntero(char t)
{
	return t - '0';
}

int obtenerNumero(const char * array , int *vv)
{
	int v=*vv;
	
	int valor=0,c = 0;
	char t = array[v];
	
	while(isdigit(t))
	{
		valor = valor*10 + (charAEntero(t));
		
		v++;
		c++;
		
		t = array[v];
	}
	*vv = v;
	
	return valor;
}

int pot(int x, int y)
{
	int resultado = 1;
	int i = 0;
	for(i=0;i<y;i++)
	{
		resultado = resultado * x;
	}
	return resultado;
}

char * convertirATexto(int num)
{
	char * resultado;
	int numDigitos=0;
	double r = abs(num);
	int pos = 0;
	
	if(num < 0)
		pos = 1;
	
	else if(num == 0)
	{
		char salida[1];
		salida[0] = '0';
		printf("%c",salida[0]);
		//resultado = salida;
		return resultado;
	}
	
	while(r >= 1)
	{
		r = r / 10;
		printf("piroba cosa %f \n",r);
		numDigitos++;
	}
	
	char salida[numDigitos+pos];
	
	salida[0] = '-';
	
	r = abs(num);
	
	int numDigTemp = numDigitos;
	
	int i = 0;
	for(i=pos;i<(numDigitos+pos);i++)
	{
		int d = (int)(r/( pot(10,(numDigTemp-1)) ));
		r = r - (pot(10,numDigTemp-1))*d;
		numDigTemp--;
		
		salida[i] = d + '0';
		printf("-- %c  , %i \n",salida[i],d);
	}
	resultado = salida;
	return resultado;
}

Arbol crearArbol(const char * exp, int i,int f)
{
	Arbol a = (Arbol)malloc(sizeof(struct arbol));
	Arbol izq = (Arbol)malloc(sizeof(struct arbol));
	Arbol der = (Arbol)malloc(sizeof(struct arbol));
	
	int pos = 0;
	char v;
	
	while(1)
	{
		ignorarEspacios(exp, &pos);
		
		v = exp[pos];
		
		if(v == '(')
		{
			
		}
		else if(v == ')')
		{
			
		}
		else if(isdigit(v))
		{
			
		}
		else if(v == '+')
		{
			a->dato = "+";
		}
		else if(v == '-')
		{
			a->dato = "-";
		}
		else if(v == '*')
		{
			a->dato = "*";
		}
		else if(v == '/')
		{
			a->dato = "/";
		}
			
	}

	return a;
}

int evaluarArbol(Arbol a)
{
	int resultado = 0;
	
	if(a == NULL)
	{
		return resultado = 0;
	}
	
	const char* dato = a->dato;
	
	if(dato == "+")
	{
		resultado = (evaluarArbol(a->arbolIzquierdo))+(evaluarArbol(a->arbolDerecho));
	}
	else if(dato == "-")
	{
		resultado = (evaluarArbol(a->arbolIzquierdo))-(evaluarArbol(a->arbolDerecho));
	}
	else if(dato == "*")
	{
		resultado = (evaluarArbol(a->arbolIzquierdo))*(evaluarArbol(a->arbolDerecho));
	}
	else if(dato == "/")
	{
		resultado = (evaluarArbol(a->arbolIzquierdo))/(evaluarArbol(a->arbolDerecho));
	}
	else
	{
		resultado = atoi(dato);
	}
	
	return resultado;
}

void imprimirArbol(Arbol a)
{
	if(a == NULL)
	{
		return;
	}
	
	const char* dato = a->dato;
	
	if(dato == "+")
	{
		printf("(");
		imprimirArbol(a->arbolIzquierdo);
		printf(")");
		printf("+");
		printf("(");
		imprimirArbol(a->arbolDerecho);
		printf(")");
	}
	else if(dato == "-")
	{
		printf("(");
		imprimirArbol(a->arbolIzquierdo);
		printf(")");
		printf("-");
		printf("(");
		imprimirArbol(a->arbolDerecho);
		printf(")");
	}
	else if(dato == "*")
	{
		printf("(");
		imprimirArbol(a->arbolIzquierdo);
		printf(")");
		printf("*");
		printf("(");
		imprimirArbol(a->arbolDerecho);
		printf(")");
	}
	else if(dato == "/")
	{
		printf("(");
		imprimirArbol(a->arbolIzquierdo);
		printf(")");
		printf("/");
		printf("(");
		imprimirArbol(a->arbolDerecho);
		printf(")");
	}
	else
	{
		printf(dato);
	}
}

int main()
{
	/*Arbol a = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol b = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol c = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol d = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol e = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol f = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol g = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol h = (Arbol)malloc(sizeof(struct arbol));
	
	Arbol i = (Arbol)malloc(sizeof(struct arbol));
	
	a->dato = "-";
	
	b->dato = "+";
	
	c->dato = "250";
	
	d->dato = "150";
	
	e->dato = "*";
	
	f->dato = "/";
	
	g->dato = "300";
	
	h->dato = "100";
	
	i->dato = "2";
	
	f->arbolIzquierdo = g;
	f->arbolDerecho = h;
	
	e->arbolIzquierdo = f;
	e->arbolDerecho = i;
	
	b->arbolIzquierdo = c;
	b->arbolDerecho = d;
	
	a->arbolIzquierdo = b;
	a->arbolDerecho = e;
	
	int l = evaluarArbol(a);	
	
	imprimirArbol(a);
	
	printf(" = %i \n",l);*/
	
	//const char * o = convertirATexto(-456);
	
	int i = '/';
	
	printf("%c %i",i,i);
	printf("\n");
		
	return 0;
}


